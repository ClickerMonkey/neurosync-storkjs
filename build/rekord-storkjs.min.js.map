{"version":3,"sources":["rekord-storkjs.min.js"],"names":["root","factory","define","amd","Rekord","Stork","module","exports","global","require","this","undefined","StoreFactory","database","setStore"],"mappings":"CAEC,SAAUA,EAAMC,GAEO,kBAAXC,SAAyBA,OAAOC,IAGzCD,QAAQ,SAAU,SAAU,SAASE,EAAQC,GAC3C,MAAOJ,GAAQD,EAAMI,EAAQC,KAGN,gBAAXC,SAAuBA,OAAOC,QAK5CD,OAAOC,QAAUN,EAAQO,OAAQC,QAAQ,UAAWA,QAAQ,UAK5DT,EAAKI,OAASH,EAAQD,EAAMA,EAAKI,OAAQJ,EAAKK,QAEhDK,KAAM,SAASF,EAAQJ,EAAQC,EAAOM,GAGtC,QAASC,GAAaC,GAEpB,MAAO,IAAIR,GAAOQ,GAKpB,MAFAT,GAAOU,SAAUF,GAAc,GAExBR","file":"rekord-storkjs.min.js","sourcesContent":["/* rekord-storkjs 1.4.3 - A rekord binding to storkjs - implementing Rekord.store by Philip Diffenderfer */\n// UMD (Universal Module Definition)\n(function (root, factory)\n{\n  if (typeof define === 'function' && define.amd) // jshint ignore:line\n  {\n    // AMD. Register as an anonymous module.\n    define(['Rekord', 'Stork'], function(Rekord, Stork) { // jshint ignore:line\n      return factory(root, Rekord, Stork);\n    });\n  }\n  else if (typeof module === 'object' && module.exports)  // jshint ignore:line\n  {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(global, require('Rekord'), require('Stork'));  // jshint ignore:line\n  }\n  else\n  {\n    // Browser globals (root is window)\n    root.Rekord = factory(root, root.Rekord, root.Stork);\n  }\n}(this, function(global, Rekord, Stork, undefined)\n{\n\n  function StoreFactory(database)\n  {\n    return new Stork( database );\n  }\n\n  Rekord.setStore( StoreFactory, true );\n\n  return Rekord;\n\n}));\n"],"sourceRoot":"/source/"}